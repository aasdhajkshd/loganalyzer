global(processInternalMessages="on" internalmsg.severity="info" parser.permitslashinprogramname="on")
module(load="impstats")
module(load="imtcp")
module(load="imudp" threads="3" timerequery="4" batchsize="128")
module(load="omstdout")
module(load="omelasticsearch")
module(load="mmjsonparse")
module(load="mmutf8fix")
module(load="ompgsql")
module(load="omclickhouse")
input(type="imtcp" port="514" ruleset="rs_pgsql" ratelimit.interval="5" ratelimit.burst="1000")
input(type="imudp" port="514" ruleset="rs_pgsql" ratelimit.interval="5" ratelimit.burst="1000")


set $!usr!message!msg = $msg;

template(name="t_pgsql" type="list" option.sql="on") {
        constant(value="INSERT INTO systemevents (message, facility, fromhost, priority, devicereportedtime, receivedat, infounitid, syslogtag, processid)")
        constant(value=" VALUES ('")
        property(outname="msg" name="msg" regex.expression="([^[:space:]+].*)" regex.nomatchmode="FIELD" regex.submatch="1" regex.type="ERE" onempty="keep")
        constant(value="', ")
        property(name="syslogfacility")
        constant(value=", '")
        property(name="hostname")
        constant(value="', ")
        property(name="syslogpriority")
        constant(value=", '")
        property(name="timereported" dateFormat="pgsql")
        constant(value="', '")
        property(name="timegenerated" dateFormat="pgsql")
        constant(value="', ")
        property(name="iut")
        constant(value=", '")
        property(outname="syslogtag" name="syslogtag" regex.type="ERE" regex.expression="(.+)(\\[[0-9]{1,10}\\]).*" regex.nomatchmode="FIELD" regex.submatch="1")
        constant(value="', '")
        property(name="procid")
        constant(value="')")
}
template(name="t_pgsql_" type="string" option.stdsql="on" string="INSERT INTO systemevents (
    message, facility, fromhost, priority, devicereportedtime, receivedat, infounitid, syslogtag, processid
) VALUES (
    '%msg%', %syslogfacility%, '%hostname%', %syslogpriority%, '%timereported:::date-pgsql%', '%timegenerated:::date-pgsql%', %iut%, '%programname%', '%procid%'
);")
action(name="main_utf8fix" type="mmutf8fix" replacementChar="?")
ruleset(name="rs_pgsql")
{
  *.* action(type="ompgsql" template="t_pgsql" server="postgresql" db="rsyslog" uid="rsyslog" pwd="password" queue.size="10000" queue.type="linkedList" queue.workerthreads="5" queue.workerthreadMinimumMessages="1000" queue.timeoutWorkerthreadShutdown="1000" queue.timeoutEnqueue="10000" queue.spoolDirectory="/logs" queue.filename="fwdBuffer" queue.saveonshutdown="on")
}
include(file="/etc/rsyslog.conf.d/log_to_files.conf" config.enabled=`echo $ENABLE_LOGFILES`)
syslog.* :omstdout:
include(file="/config/droprules.conf" mode="optional")
include(text=`echo $CNF_CALL_LOG_TO_LOGFILES`)
